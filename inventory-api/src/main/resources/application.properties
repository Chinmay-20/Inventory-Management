spring.application.name=inventory-api
spring.datasource.url=jdbc:postgresql://localhost:5432/inventory_db
spring.datasource.username=postgres
spring.datasource.password=California20@
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configurations
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.cache.redis.time-to-live=600000

# kafka runnning instance
# change this to localhost:9092 if faced issue. yes faced issue so set to localhost:9092
spring.kafka.bootstrap-servers=localhost:9092 
spring.kafka.consumer.group-id=inventory-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.retries=0
spring.kafka.producer.acks=all
spring.kafka.template.default-topic=product-events
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer



# # grafana (prometheus)
# # âœ… Enable Prometheus, Health, and Metrics Endpoints
# # Corrected property (replaces deprecated `management.endpoint.metrics.enabled`)
# # Corrected property (replaces `management.metrics.export.prometheus.enabled`)
# # Corrected property (replaces `management.endpoint.prometheus.enabled`)
# management.endpoints.web.exposure.include=health,metrics,prometheus
# management.endpoint.metrics.access=UNRESTRICTED
# management.prometheus.metrics.export.enabled=true
# management.endpoint.prometheus.access=UNRESTRICTED
